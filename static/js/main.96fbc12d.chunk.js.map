{"version":3,"sources":["components/Books.jsx","components/Stem.jsx","components/Lookups.jsx","containers/Book.jsx","containers/Kindle.jsx","App.js","serviceWorker.js","index.js"],"names":["Books","_this$props","this","props","books","clickTableRow","react_default","a","createElement","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","book","key","_id","onClick","title","authors","lang","Component","defaultProps","bookKey","console","log","Stem","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","open","stem","lookup","close","bind","assertThisInitialized","setState","_this2","save","Chip_default","label","variant","onDelete","deleteIcon","Edit_default","Dialog_default","onClose","onBlur","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","usage","TextField_default","autoFocus","margin","fullWidth","value","onChange","event","target","DialogActions_default","Button_default","color","lookupId","Lookups","lookups","Typography_default","components_Stem","Transition","Slide_default","assign","direction","Book","client","Stitch","defaultAppClient","classes","fullScreen","TransitionComponent","AppBar_default","className","appBar","Toolbar_default","flex","IconButton_default","dict","de","callFunction","then","words","cards","flattenDepth","word","definitions","definition","examples","example","explanation","concat","escape","card","stringify","error","output","data","encodeURI","link","document","setAttribute","click","aria-label","CloudDownload_default","Close_default","components_Lookups","withStyles","position","Kindle","closeBookDialog","_this3","_this$state","containers_Book","components_Books","bookId","initializeDefaultAppClient","process","credential","UserPasswordCredential","auth","loginWithCredential","App","Kindle_Kindle","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96fbc12d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nclass Books extends Component {\n  render () {\n    const { books, clickTableRow } = this.props\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell>Authors</TableCell>\n            <TableCell>Lang</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {books.map(book => (\n            <TableRow\n              key={book._id}\n              onClick={() => {\n                clickTableRow(book._id)\n              }}\n            >\n              <TableCell>{book.title}</TableCell>\n              <TableCell>{book.authors}</TableCell>\n              <TableCell>{book.lang}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n}\n\nBooks.propTypes = {\n  books: PropTypes.array.isRequired,\n  clickTableRow: PropTypes.func\n}\n\nBooks.defaultProps = {\n  books: [],\n  clickTableRow: bookKey => {\n    console.log(bookKey)\n  }\n}\n\nexport default Books\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Chip from '@material-ui/core/Chip'\nimport EditIcon from '@material-ui/icons/Edit'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nclass Stem extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      open: false,\n      stem: this.props.lookup.stem\n    }\n    this.close = this.close.bind(this)\n  }\n\n  close () {\n    this.setState({ open: false })\n  }\n\n  render () {\n    const { lookup, save } = this.props\n    return (\n      <div>\n        <Chip\n          key={lookup._id}\n          label={lookup.stem}\n          variant='outlined'\n          onDelete={() => {\n            this.setState({ open: true })\n          }}\n          deleteIcon={<EditIcon />}\n        />\n        <Dialog\n          open={this.state.open}\n          onClose={this.close}\n          onBlur={this.close}\n          aria-labelledby='form-dialog-title'\n        >\n          <DialogTitle id='form-dialog-title'>Edit</DialogTitle>\n          <DialogContent>\n            <DialogContentText>{lookup.usage}</DialogContentText>\n            <TextField\n              autoFocus\n              margin='dense'\n              id='stem'\n              label='Stem'\n              fullWidth\n              value={this.state.stem}\n              onChange={event => {\n                this.setState({ stem: event.target.value })\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.close} color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                save(lookup._id, this.state.stem)\n                // positive response\n                lookup.stem = this.state.stem\n                this.setState({ open: false })\n              }}\n              color='primary'\n            >\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nStem.propTypes = {\n  lookup: PropTypes.object.isRequired,\n  save: PropTypes.func.isRequired\n}\n\nStem.defaultProps = {\n  save: (lookupId, stem) => {\n    console.log(lookupId, stem)\n  }\n}\n\nexport default Stem\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport Typography from '@material-ui/core/Typography'\n\nimport Stem from './Stem'\n\nclass Lookups extends Component {\n  render () {\n    const { lookups, save } = this.props\n    return (\n      <Table>\n        <TableBody>\n          {lookups.map(lookup => (\n            <TableRow key={lookup._id}>\n              <TableCell>\n                <Typography>{lookup.usage}</Typography>\n                <Stem lookup={lookup} save={save} />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n}\n\nLookups.propTypes = {\n  lookups: PropTypes.array.isRequired,\n  save: PropTypes.func.isRequired\n}\n\nLookups.defaultProps = {\n  lookups: [],\n  save: (lookupId, stem) => {\n    console.log(lookupId, stem)\n  }\n}\n\nexport default Lookups\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport Slide from '@material-ui/core/Slide'\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { Stitch } from 'mongodb-stitch-browser-sdk'\nimport flattenDepth from 'lodash/flattenDepth'\nimport stringify from 'csv-stringify'\n\nimport Lookups from '../components/Lookups'\n\nfunction card (word, example, definition, explanation) {\n  const front = `<h2>${escape(word)}</h2><p>${escape(example)}</p>`\n  const back = explanation\n    ? `<p>${escape(explanation)}</p><p>${escape(definition)}</p>`\n    : `<p>${escape(definition)}</p>`\n  return [front, back]\n}\n\nconst styles = {\n  appBar: {\n    position: 'sticky'\n  },\n  flex: {\n    flex: 1\n  }\n}\n\nfunction Transition (props) {\n  return <Slide direction='up' {...props} />\n}\n\nclass Book extends Component {\n  constructor (props) {\n    super(props)\n    this.client = Stitch.defaultAppClient\n  }\n\n  render () {\n    const { classes, book, close } = this.props\n    return (\n      <Dialog open fullScreen onClose={close} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography\n              variant='title'\n              color='inherit'\n              className={classes.flex}\n            >\n              {book.title}\n            </Typography>\n            <IconButton\n              color='inherit'\n              onClick={() => {\n                const dicts = {\n                  de: 'duden'\n                }\n                const dict = dicts[book.lang]\n                dict &&\n                  this.client\n                    .callFunction('getWords', [\n                      dict,\n                      book.lookups.map(lookup => lookup.stem)\n                    ])\n                    .then(words => {\n                      console.log(words)\n                      const cards = flattenDepth(\n                        words.map(word =>\n                          word.definitions.map(definition =>\n                            definition.examples.map(example =>\n                              card(\n                                word.word,\n                                example.example,\n                                definition.definition,\n                                example.definition\n                              )\n                            )\n                          )\n                        ),\n                        2\n                      )\n                      console.log(cards)\n                      stringify(cards, (error, output) => {\n                        if (error) console.log(error)\n                        else {\n                          // console.log(output)\n                          const filename = 'anki.csv'\n                          const data = encodeURI(\n                            'data:text/csv;charset=utf-8,' + output\n                          )\n                          const link = document.createElement('a')\n                          link.setAttribute('href', data)\n                          link.setAttribute('download', filename)\n                          link.click()\n                        }\n                      })\n                    })\n              }}\n              aria-label='Download'\n            >\n              <CloudDownloadIcon />\n            </IconButton>\n            <IconButton color='inherit' onClick={close} aria-label='Close'>\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Lookups\n          lookups={book.lookups}\n          save={(lookupId, stem) => {\n            this.client.callFunction('updateStem', [book._id, lookupId, stem])\n          }}\n        />\n      </Dialog>\n    )\n  }\n}\n\nBook.propTypes = {\n  classes: PropTypes.object.isRequired,\n  book: PropTypes.object\n}\n\nexport default withStyles(styles)(Book)\n","import React, { Component } from 'react'\nimport { Stitch } from 'mongodb-stitch-browser-sdk'\n\nimport Books from '../components/Books'\nimport Book from './Book'\n\nexport default class Kindle extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      title: '',\n      books: [],\n      book: null\n    }\n    this.client = Stitch.defaultAppClient\n    this.closeBookDialog = this.closeBookDialog.bind(this)\n  }\n\n  closeBookDialog () {\n    this.setState({ book: null })\n  }\n\n  componentWillMount () {\n    this.client.callFunction('getBooks').then(books => {\n      this.setState({ books })\n    })\n  }\n\n  render () {\n    const { books, book } = this.state\n    return (\n      <div>\n        {book && <Book book={book} close={this.closeBookDialog} />}\n        <Books\n          books={books}\n          clickTableRow={bookId => {\n            this.client.callFunction('getBook', [bookId]).then(book => {\n              this.setState({ book })\n            })\n          }}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Stitch, UserPasswordCredential } from 'mongodb-stitch-browser-sdk'\n\nimport Kindle from './containers/Kindle'\n\ntry {\n  const client = Stitch.initializeDefaultAppClient(\n    process.env.REACT_APP_STITCH_APP_KEY\n  )\n  const credential = new UserPasswordCredential(\n    process.env.REACT_APP_TEST_EMAIL,\n    process.env.REACT_APP_TEST_PASSWORD\n  )\n  client.auth.loginWithCredential(credential)\n} catch (error) {\n  // ignore: default app can only be set once\n  console.log(error)\n}\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <Kindle />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}